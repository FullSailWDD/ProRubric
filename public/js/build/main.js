var socket=io.connect();angular.module("ProRubric",["ngRoute","ngTagsInput"]),angular.module("ProRubric").config(["$interpolateProvider","$routeProvider",function(e,r){e.startSymbol("{[{"),e.endSymbol("}]}"),r.when("/",{templateUrl:"views/addDegree.html",controller:"degreeController"}).when("/course",{templateUrl:"views/addCourse.html",controller:"courseController"}).when("/editCourse/:_id",{templateUrl:"views/editCourse.html",controller:"editCourse"}).otherwise({redirect:"/"})}]),angular.module("ProRubric").controller("degreeController",["$scope",function(e){socket.on("find degrees",function(r){e.degreeView=r}),socket.on("find course",function(r){e.courseView=r}),e.degreeAdd=function(){var r={title:e.degreeTitle,acronym:e.degreeAcronym};socket.emit("add degree",r)}}]),angular.module("ProRubric").factory("SocketeerGetters",function(){var e={get:function(e){e.on("course send",function(e){console.log(e)})}};return{get:function(){return socket.on("course send",function(e){console.log(e)}),e.get}}}),angular.module("ProRubric").factory("SocketeerSetters",function(){var e={query:function(e,r){socket.emit("course req",{_id:e})}};return{query:e.query}}),angular.module("ProRubric").controller("editCourse",["$scope","$routeParams","SocketeerGetters","SocketeerSetters",function(e,r,o,t){t.query(r._id),o.get(socket.on)}]),angular.module("ProRubric").controller("courseController",["$scope",function(e){e.courseAdd=function(){var r={title:e.courseTitle,acronym:e.courseAcronym,description:e.courseDescription};socket.emit("add course",r)}}]);
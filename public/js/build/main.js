"use strict";angular.module("ProRubric",["ngRoute"]).config(["$interpolateProvider","$routeProvider",function(e,o){e.startSymbol("{[{"),e.endSymbol("}]}"),o.when("/",{templateUrl:"views/dashboard.html",controller:"dashboardController"}).when("/edit/degree/:degree_id",{templateUrl:"views/editDegree.html",controller:"editDegree"}).when("/edit/course/:course_id",{templateUrl:"views/editCourse.html",controller:"editCourse"}).when("/course",{templateUrl:"views/courses.html",controller:"coursesController"}).when("/audit/:rubric_id",{templateUrl:"views/audit.html",controller:"AuditController"}).when("/addInfo",{templateUrl:"views/addInfo.html",controller:"secondController"}).when("/addForm",{templateUrl:"views/addForm.html",controller:"secondController"}).when("/addRubric",{templateUrl:"views/addRubric.html",controller:"secondController"}).when("/home",{templateUrl:"views/home.html",controller:"secondController"}).when("/info",{templateUrl:"views/info.html",controller:"secondController"}).when("/text",{templateUrl:"views/text.html",controller:"secondController"})}]).controller("dashboardController",["$scope","socket",function(e,o){e.reloadPage=function(){window.location.reload()},e.$on("$viewContentLoaded",function(){o.on("find degrees",function(o){o.length?e.degreeView=o:console.log("You has no degrees :(")}),o.on("find courses",function(o){o.length?e.courseView=o:console.log("You has no courses :(")})}),e.degreeAdd=function(){var r={title:e.degreeTitle,acronym:e.degreeAcronym};o.emit("add degree",r),e.reloadPage()},e.degreeDelete=function(r){o.emit("delete degree",r),e.reloadPage()}}]).controller("coursesController",["$scope","socket",function(e,o){e.reloadPage=function(){window.location.reload()},e.$on("$viewContentLoaded",function(){o.on("find courses",function(o){o.length?(console.log(o),e.courseView=o):console.log("You has no courses :(")})}),e.courseAdd=function(){var r={title:e.courseTitle,acronym:e.courseAcronym,description:e.courseDescription};o.emit("add course",r),e.reloadPage()},e.courseDelete=function(r){o.emit("delete course",r),e.reloadPage()}}]).controller("editDegree",["$scope","$routeParams","socket",function(e,o,r){e.reloadPage=function(){window.location.reload()},r.emit("degree req",o.degree_id),r.on("degree send",function(o){e.degreeEdit=o[0]}),e.degreeUpdate=function(){var o={_id:e.degreeEdit._id,title:e.degreeEdit.title,acronym:e.degreeEdit.acronym};console.log(o),r.emit("degree update",o),e.reloadPage()}}]).controller("editCourse",["$scope","$routeParams","socket",function(e,o,r){e.reloadPage=function(){window.location.reload()},r.emit("course req",o.course_id),r.on("course send",function(o){e.editData=o}),e.courseUpdate=function(){var o={_id:e.editData._id,title:e.editData.title,acronym:e.editData.acronym,description:e.editData.description};r.emit("course update",o),e.reloadPage()}}]).controller("AuditController",["$scope","Audit",function(e,o){e.rubric=o.data,e.calculateGrade=function(){var o=[];for(var r in e.rubric.auditMatrix)o.push(e.rubric.auditMatrix[r]);e.rubric.auditGrade=o.reduce(function(e,o,r,t){return e+o})},e.calculateAuditProgress=function(o,r,t,n){e.rubric.auditMatrix[o]=r*(t/n);var i=Object.keys(e.rubric.auditMatrix).length;return e.calculateGrade(),e.rubric.auditProgress=i/e.rubric.totalLineItems*100,e.rubric.auditProgress},e.actionGrade=function(o,r){var t=!1;angular.forEach(e.rubric.sections,function(n,i){angular.forEach(n.lineItems,function(i,l){i._id===o&&(i.grade=r,t=i,e.calculateAuditProgress(o,r,n.gradeWeight,n.lineItems.length))})}),t||console.log("Error: No Item ID Matched for this Rubric")},e.actionOutput=function(){console.log(e.rubric)}}]);